services:
  loki:
    container_name: loki
    image: docker.arvancloud.ir/grafana/loki:2.9.4
    command: -config.file=/etc/loki/local-config.yaml
    ports:
      - "127.0.0.1:3100:3100"
    volumes:
      - ./config/loki/loki-config.yaml:/etc/loki/local-config.yaml
    healthcheck:
      test: [ "CMD-SHELL", "wget --no-verbose --tries=1 --spider http://localhost:3100/ready || exit 1" ]
      interval: 10s
      timeout: 5s
      retries: 5
    deploy:
      resources:
        limits:
          cpus: '0.2'
          memory: 600M
    logging:
      options:
        max-size: "1024m"

  grafana:
    image: docker.arvancloud.ir/grafana/grafana:10.3.1
    container_name: grafana
    ports:
      - "127.0.0.1:3000:3000"
    environment:
      # - GF_LOG_LEVEL=warn
      - GF_ANALYTICS_REPORTING_ENABLED=false
    volumes:
      # - grafana:/var/lib/grafana
      - ./config/grafana/datasource_loki.yml:/etc/grafana/provisioning/datasource_loki.yml
    healthcheck:
      test: [ "CMD-SHELL", "wget --no-verbose --tries=1 --spider http://localhost:3000/api/health || exit 1" ]
      interval: 10s
      timeout: 5s
      retries: 5
    depends_on:
      loki:
        condition: service_healthy
    deploy:
      resources:
        limits:
          cpus: '0.2'
          memory: 600M
    logging:
      options:
        max-size: "1024m"

  vector:
    image: docker.arvancloud.ir/timberio/vector:0.35.0-alpine
    container_name: vector
    ports:
      - "5123:5123/udp"
    volumes:
      - ./config/vector/vector.yaml:/etc/vector/vector.yaml:ro
      - /var/run/docker.sock:/var/run/docker.sock:ro
    depends_on:
      loki:
        condition: service_healthy
    deploy:
      resources:
        limits:
          cpus: '0.2'
          memory: 600M
    logging:
      options:
        max-size: "1024m"

# volumes:
#   grafana:
